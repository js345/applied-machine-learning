trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
for (i in c(3,4,6,8)) {
row<-x[,i]==0
x[row,i]=NA
}
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
for (i in c(3,4,6,8)) {
row<-x[,i]==0
x[row,i]=NA
}
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
for (i in c(3,4,6,8)) {
row<-x[,i]==0
x[row,i]=NA
}
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
for (i in c(3,4,6,8)) {
row<-x[,i]==0
x[row,i]=NA
}
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
for (i in c(3,4,6,8)) {
row<-x[,i]==0
x[row,i]=NA
}
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
trainY<-as.factor(trainY)
model<-train(trainX, trainY, method='nb', trControl = trainControl(method = 'cv', number=10))
teclasses<-predict(model,newdata=x[-partition,])
confusionMatrix(data=teclasses, reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
trainY<-as.factor(trainY)
model<-train(trainX, trainY, method='nb', trControl = trainControl(method = 'cv', number=10))
teclasses<-predict(model,newdata=x[-partition,])
confusionMatrix(data=teclasses, reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
trainY<-as.factor(trainY)
model<-train(trainX, trainY, method='nb', trControl = trainControl(method = 'cv', number=10))
teclasses<-predict(model,newdata=x[-partition,])
confusionMatrix(data=teclasses, reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
trainY<-as.factor(trainY)
model<-train(trainX, trainY, method='nb', trControl = trainControl(method = 'cv', number=10))
teclasses<-predict(model,newdata=x[-partition,])
confusionMatrix(data=teclasses, reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
trainY<-as.factor(trainY)
model<-train(trainX, trainY, method='nb', trControl = trainControl(method = 'cv', number=10))
teclasses<-predict(model,newdata=x[-partition,])
confusionMatrix(data=teclasses, reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
model<-svmlight(x=trainX, grouping=trainY, pathsvm="/Users/xiaofo/svm_light")
teclasses<-predict(model,newdata=x[-partition,])
labels<-teclasses['class']
confusionMatrix(data=labels[[1]], reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
model<-svmlight(x=trainX, grouping=trainY, pathsvm="/Users/xiaofo/svm_light")
teclasses<-predict(model,newdata=x[-partition,])
labels<-teclasses['class']
confusionMatrix(data=labels[[1]], reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
model<-svmlight(x=trainX, grouping=trainY, pathsvm="/Users/xiaofo/svm_light")
teclasses<-predict(model,newdata=x[-partition,])
labels<-teclasses['class']
confusionMatrix(data=labels[[1]], reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
model<-svmlight(x=trainX, grouping=trainY, pathsvm="/Users/xiaofo/svm_light")
teclasses<-predict(model,newdata=x[-partition,])
labels<-teclasses['class']
confusionMatrix(data=labels[[1]], reference=y[-partition])
library(caret)
library(klaR)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
model<-svmlight(x=trainX, grouping=trainY, pathsvm="/Users/xiaofo/svm_light")
teclasses<-predict(model,newdata=x[-partition,])
labels<-teclasses['class']
confusionMatrix(data=labels[[1]], reference=y[-partition])
rm(list=ls())
wdat<-read.csv("pima-indians-diabetes.data", header=FALSE)
library(klaR)
library(caret)
bigx<-wdat[,-c(9)]
bigy<-as.factor(wdat[,9])
wtd<-createDataPartition(y=bigy, p=.8, list=FALSE)
svm<-svmlight(bigx[wtd,], bigy[wtd], pathsvm='/Users/daf/Downloads/svm_light_osx.8.4_i7/')
labels<-predict(svm, bigx[-wtd,])
foo<-labels$class
sum(foo==bigy[-wtd])/(sum(foo==bigy[-wtd])+sum(!(foo==bigy[-wtd])))
rm(list=ls())
wdat<-read.csv("pima-indians-diabetes.data", header=FALSE)
library(klaR)
library(caret)
bigx<-wdat[,-c(9)]
bigy<-as.factor(wdat[,9])
wtd<-createDataPartition(y=bigy, p=.8, list=FALSE)
svm<-svmlight(bigx[wtd,], bigy[wtd], pathsvm="/Users/xiaofo/svm_light")
labels<-predict(svm, bigx[-wtd,])
foo<-labels$class
sum(foo==bigy[-wtd])/(sum(foo==bigy[-wtd])+sum(!(foo==bigy[-wtd])))
rm(list=ls())
wdat<-read.csv("pima-indians-diabetes.data", header=FALSE)
library(klaR)
library(caret)
bigx<-wdat[,-c(9)]
bigy<-as.factor(wdat[,9])
wtd<-createDataPartition(y=bigy, p=.8, list=FALSE)
svm<-svmlight(bigx[wtd,], bigy[wtd], pathsvm="/Users/xiaofo/svm_light")
labels<-predict(svm, bigx[-wtd,])
foo<-labels$class
sum(foo==bigy[-wtd])/(sum(foo==bigy[-wtd])+sum(!(foo==bigy[-wtd])))
rm(list=ls())
wdat<-read.csv("pima-indians-diabetes.data", header=FALSE)
library(klaR)
library(caret)
bigx<-wdat[,-c(9)]
bigy<-as.factor(wdat[,9])
wtd<-createDataPartition(y=bigy, p=.8, list=FALSE)
svm<-svmlight(bigx[wtd,], bigy[wtd], pathsvm="/Users/xiaofo/svm_light")
labels<-predict(svm, bigx[-wtd,])
foo<-labels$class
sum(foo==bigy[-wtd])/(sum(foo==bigy[-wtd])+sum(!(foo==bigy[-wtd])))
rm(list=ls())
wdat<-read.csv("pima-indians-diabetes.data", header=FALSE)
library(klaR)
library(caret)
bigx<-wdat[,-c(9)]
bigy<-as.factor(wdat[,9])
wtd<-createDataPartition(y=bigy, p=.8, list=FALSE)
svm<-svmlight(bigx[wtd,], bigy[wtd], pathsvm="/Users/xiaofo/svm_light")
labels<-predict(svm, bigx[-wtd,])
foo<-labels$class
sum(foo==bigy[-wtd])/(sum(foo==bigy[-wtd])+sum(!(foo==bigy[-wtd])))
rm(list=ls())
wdat<-read.csv("pima-indians-diabetes.data", header=FALSE)
library(klaR)
library(caret)
bigx<-wdat[,-c(9)]
bigy<-as.factor(wdat[,9])
wtd<-createDataPartition(y=bigy, p=.8, list=FALSE)
svm<-svmlight(bigx[wtd,], bigy[wtd], pathsvm="/Users/xiaofo/svm_light")
labels<-predict(svm, bigx[-wtd,])
foo<-labels$class
sum(foo==bigy[-wtd])/(sum(foo==bigy[-wtd])+sum(!(foo==bigy[-wtd])))
rm(list=ls())
wdat<-read.csv("pima-indians-diabetes.data", header=FALSE)
library(klaR)
library(caret)
bigx<-wdat[,-c(9)]
bigy<-as.factor(wdat[,9])
wtd<-createDataPartition(y=bigy, p=.8, list=FALSE)
svm<-svmlight(bigx[wtd,], bigy[wtd], pathsvm="/Users/xiaofo/svm_light")
labels<-predict(svm, bigx[-wtd,])
foo<-labels$class
sum(foo==bigy[-wtd])/(sum(foo==bigy[-wtd])+sum(!(foo==bigy[-wtd])))
library(caret)
data<-read.csv("pima-indians-diabetes.data", header=FALSE)
x<-data[,-9]
y<-data[,9]
partition<-createDataPartition(y=y, p=0.8, list=FALSE)
trainX<-x[partition,]
trainY<-y[partition]
flag<-trainY==1
trainP<-trainX[flag,]
trainN<-trainX[!flag,]
pMeans<-sapply(trainP, mean, na.rm=T)
nMeans<-sapply(trainN, mean, na.rm=T)
pStd<-sapply(trainP, sd, na.rm=T)
nStd<-sapply(trainN, sd, na.rm=T)
# -(x-u)^2 / 2*sig^2 - log sig
testX<-x[-partition,]
testY<-y[-partition]
pOffset<-t(t(testX)-pMeans)
nOffset<-t(t(testX)-nMeans)
pScales<-t(t(pOffset) / pStd)
nScales<-t(t(nOffset) / nStd)
pLog<--(1/2)*rowSums(apply(pScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(pStd))
nLog<--(1/2)*rowSums(apply(nScales, c(1,2), function(x)x^2), na.rm = T) - sum(log(nStd))
lvw=pLog>nLog
correct<-lvw==testY
accuracy<-sum(correct)/(sum(correct)+sum(!correct))
accuracy
pStd
sum(log(pStd))
